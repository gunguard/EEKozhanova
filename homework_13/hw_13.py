# В этом домашнем задании программа должна открывать файл с русским текстом в кодировке UTF-8 и распечатывать из него по одному разу все встретившиеся в нём (в зависимости от варианта):
# формы глагола "программировать"
# программироваться, программируя\ю\ешь\ет\ем\ете\ют\, программировал\ла\ло\ли

# программир(ова(л(а|о|и)?)
# программировш(ая\ший\шое\шей\шую\шего\шим\шему\шем)(е(й|го|му?)|и(й|м)|ая|ое)
# программир(ова?)?(ш(е(й|го|му?)|и(й|м)|ая|ое))|(л(а|о|и)?     у(я|ют?|е(шь|те?|м|))(с(я|ь))?


# ветвь АДЫН
# ветвь ДЫВА

import re


def PrepText():
    f = open('text.txt', 'r', encoding='utf-8')
    s = f.read().split()
    words = []
    for n in s:
        words.append(n.lower().strip('n\.,!?:;\'\"“()[]=+-_#&@*{}|?/«»—'))
    f.close
    return words


def forms(m):
    match = []
    # a = 'нн(о(е|го|му?|й)|ы(й|ми?|х)|ую|ая)'
    # b = 'ть(ся)?'
    # c = 'л((и|о|а)(сь)?|ся)?'
    # d = 'ши'
    # e = 'ш(е(й|го|му?)|и(й|ми?|х)|ая|ое)(ся)?'
    # f = 'я(сь)?'
    # g = 'ю((сь)?|т(ся)?)'
    # h = 'е(те?|шь|м)(ся)?'
    # i = 'й(ся)?'
    # j = 'ющ(е(й|го|му?|е)|и(й|е|ми?|х)|ая|ую)(ся)?'
    # k = 'ем(о(е|го|му?|й)|ы(й|ми?|х)|ую|ая)'
    reg = '^программир(ова(нн(о(е|го|му?|й)|ы(й|ми?|х)|ую|ая)|ть(ся)?|л((и|о|а)(сь)?|ся)?|в(ши|ш(е(й|го|му?)|и(й|ми?|х)|ая|ое)(ся)?)?))' \
          '|у((я(сь)?' \
          '|ю((сь)?|т(ся)?)' \
          '|е(те?|шь|м)(ся)?' \
          '|й(ся)?' \
          '|ющ(е(й|го|му?|е)|и(й|е|ми?|х)|ая|ую)(ся)?' \
          '|ем(о(е|го|му?|й)|ы(й|ми?|х)|ую|ая)))'
    # Ошибка в строке выше
    fut = 'буд(у|ешь|ет|ем|ете|ут)'
    inf = 'программировать'
    for i in range(len(m)):
        if re.search(reg, m[i]) and not re.search(fut, m[i-1]) and m[i].startswith('программир'):
            match.append(m[i])
        if re.search(fut, m[i]) and re.search(inf, m[i+1]):
            match.append(m[i]+' '+m[i+1])
    return match


def unique(n):
    match = []
    for l in range(len(n)):
        for k in range(len(n)):
            if n[l] != n[k]:
                for i in match:
                    if n[l] == i:
                        break
                else:
                    match.append(n[l])
    print(match)
    return


def main():
    unique(forms(PrepText()))
    return


main()